- name: Deploy Application
  hosts: project_lab_9_Tim
  become: true

  vars:
    ansible_user: ubuntu
    repo_url: "git@github.com:pchen109/tim-labs.git"
    proj_det: "/home/ubuntu/project"

  tasks:
    - name: Install Git
      ansible.builtin.apt:
        name: git
        state: present

    - name: Copy SSH key to VM
      ansible.builtin.copy:
        src: /home/kekw/.ssh/tf-aws
        dest: /home/ubuntu/.ssh/tf-aws
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Clone the repository from GitHub
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ proj_det }}"
        clone: yes   # Clone the repository if it does not exist
        update: yes  # Update the repository if it exists
        key_file: /home/ubuntu/.ssh/tf-aws
        accept_hostkey: true
        force: true

    - name: Check if Docker is installed
      command: docker --version
      register: docker_installed
      ignore_errors: true

    - name: Install required dependencies for Docker
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: yes
      when: docker_installed.failed

    - name: Create apt keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: docker_installed.failed

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: docker_installed.failed

    - name: Add Docker repository
      ansible.builtin.shell:
        cmd: |
          echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true    # need explicit sudo permissions
      when: docker_installed.failed

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      become: true
      when: docker_installed.failed

    - name: Install Docker and related components
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: docker_installed.failed

    - name: Create Docker group if it does not exist
      ansible.builtin.group:
        name: docker
        state: present
      when: docker_installed.failed

    ### Need to relogin to apply group changes
    - name: Add user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      become: true

    ### CONFIGURATION ######################################################
    - name: Copy conf folder to remote node
      ansible.builtin.copy:
        src: /home/kekw/tim-lab/tim-assignment/conf
        dest: /home/ubuntu/project/
        owner: nobody 
        group: nogroup 
        mode: "0755" 

    - name: Remove test config files if they exist
      ansible.builtin.file:
        path: "/home/ubuntu/project/conf/{{ item }}"
        state: absent
      loop:
        - analyzer_config.yml
        - log_config.yml
        - processing_config.yml
        - receiver_config.yml
        - storage_config.yml
        - consistency_check_config.yml
        - anomaly_detector.yml

    - name: Rename config files on remote node
      ansible.builtin.command:
        cmd: mv /home/ubuntu/project/conf/{{ item.old_name }} /home/ubuntu/project/conf/{{ item.new_name }}
      loop:
        - { old_name: "analyzer_config_prod.yml", new_name: "analyzer_config.yml" }
        - { old_name: "log_config_prod.yml", new_name: "log_config.yml" }
        - { old_name: "processing_config_prod.yml", new_name: "processing_config.yml" }
        - { old_name: "receiver_config_prod.yml", new_name: "receiver_config.yml" }
        - { old_name: "storage_config_prod.yml", new_name: "storage_config.yml" }
        - { old_name: "consistency_check_config_prod.yml", new_name: "consistency_check_config.yml" }
        - { old_name: "ananomaly_detector_prod.yml", new_name: "ananomaly_detector.yml" }


    - name: Set permissions on config files
      ansible.builtin.file:
        path: "/home/ubuntu/project/conf/{{ item }}"
        mode: "0644"
      loop:
        - analyzer_config.yml
        - log_config.yml
        - processing_config.yml
        - receiver_config.yml
        - storage_config.yml
        - consistency_check_config.yml
        - ananomaly_detector.yml

    ### Data/Processing/output.json ########################################
    - name: Ensure data and processing directories exist on remote node
      ansible.builtin.file:
        path: /home/ubuntu/project/data/processing
        state: directory
        owner: nobody
        group: nogroup
        mode: "0755"
        

    - name: Copy output.json file to remote node
      ansible.builtin.copy:
        src: "/home/kekw/tim-lab/tim-assignment/data/processing/output.json"
        dest: /home/ubuntu/project/data/processing 
        owner: nobody 
        group: nogroup 
        mode: "0644" 
        force: yes

    ### Data/anomaly/output.json ########################################
    - name: Ensure data and processing directories exist on remote node
      ansible.builtin.file:
        path: /home/ubuntu/project/data/anomaly_detector
        state: directory
        owner: nobody
        group: nogroup
        mode: "0755"
        

    - name: Copy output.json file to remote node
      ansible.builtin.copy:
        src: "/home/kekw/tim-lab/tim-assignment/data/anomaly_detector/output.json"
        dest: /home/ubuntu/project/data/anomaly 
        owner: nobody 
        group: nogroup 
        mode: "0644" 
        force: yes

    ### Data/consistency_check/output.json ########################################
    - name: Ensure data and processing directories exist on remote node
      ansible.builtin.file:
        path: /home/ubuntu/project/data/consistency_check
        state: directory
        owner: nobody
        group: nogroup
        mode: "0755"

    - name: Copy output.json file to remote node
      ansible.builtin.copy:
        src: /home/kekw/tim-lab/tim-assignment/data/consistency_check/output.json
        dest: /home/ubuntu/project/data/consistency_check 
        owner: nobody 
        group: nogroup 
        mode: "0644" 
        force: yes

    ### Logs ################################################################
    - name: Copy logs folder to remote node
      ansible.builtin.copy:
        src: "/home/kekw/tim-lab/tim-assignment/logs"
        dest: /home/ubuntu/project/
        owner: nobody 
        group: nogroup 
        mode: "0755" 
        force: yes

    - name: Set permissions on log files
      ansible.builtin.file:
        path: "/home/ubuntu/project/logs/{{ item }}"
        mode: "0644"
      loop:
        - analyzer.log
        - processing.log
        - receiver.log
        - storage.log
        - consistency_check.log
        - anomaly_detector.log

    ### ENV ################################################################
    - name: Copy env file to remote node
      ansible.builtin.copy:
        src: /home/kekw/tim-lab/tim-assignment/.env
        dest: /home/ubuntu/project/
        owner: nobody 
        group: nogroup 
        mode: "644" 

    ### LAB 10 #############################################################
    - name: Replace localhost with the IP address in script.js
      replace:
        path: /home/ubuntu/project/dashboard/updateStats.js
        regexp: 'localhost:(\d{4})'
        replace: "{{ instance_ip }}"

    - name: Build Docker image
      command:
        cmd: "docker build -t dashboard-ui /home/ubuntu/project/dashboard"

    ### Modify ports in docker compose yaml###############################
    # - name: Remove ports section from processing service
    #   lineinfile:
    #     path: /home/ubuntu/project/docker-compose.yml
    #     regexp: '^\s*ports:\s*\n^\s*-.*8100.*'
    #     state: absent

    # - name: Remove ports section from analyzer service
    #   lineinfile:
    #     path: /home/ubuntu/project/docker-compose.yml
    #     regexp: '^\s*ports:\s*\n^\s*-.*8111.*'
    #     state: absent

    # - name: Remove ports section from consistency_check service
    #   lineinfile:
    #     path: /home/ubuntu/project/docker-compose.yml
    #     regexp: '^\s*ports:\s*\n^\s*-.*7777.*'
    #     state: absent

    ### Docker Compose ####################################################
    - name: Run Docker Compose to start the services
      ansible.builtin.shell:
        cmd: "docker compose up -d --build"
      args:
        chdir: "{{ proj_det }}"

    - name: Wait for 10 seconds before retrying Docker Compose
      ansible.builtin.pause:
        seconds: 10


    - name: Retry Docker Compose to ensure all services are up
      ansible.builtin.shell:
        cmd: "docker compose up -d --scale receiver=3"
      args:
        chdir: "{{ proj_det }}"
